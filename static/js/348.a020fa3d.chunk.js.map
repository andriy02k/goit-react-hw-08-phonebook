{"version":3,"file":"static/js/348.a020fa3d.chunk.js","mappings":"+NAAaA,EAAmB,SAACC,GAAK,OAAKA,EAAMC,SAASC,KAAM,EACnDC,EAAiB,SAACH,GAAK,OAAKA,EAAMI,OAAOA,MAAO,E,kDC6C7D,EAxCa,WACX,IAAMC,GAAQC,EAAAA,EAAAA,KACRL,GAAWM,EAAAA,EAAAA,IAAYR,GACvBS,GAAWC,EAAAA,EAAAA,MACjBC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,IAKxBG,EAAAA,EAAAA,YAAU,WACRZ,GAASa,EAAAA,EAAAA,MACX,GAAG,CAACb,IAaJ,OACEc,EAAAA,EAAAA,MAAA,QAAMC,SAZa,SAACC,GACpBA,EAAEC,iBAEExB,EAASyB,MAAK,SAAAC,GAAE,OAAIA,EAAGb,KAAKc,sBAAwBd,EAAKc,mBAAmB,IAC9EC,MAAM,GAADC,OAAIhB,EAAI,4BAEbN,GAASuB,EAAAA,EAAAA,IAAiB,CAAEjB,KAAAA,EAAMI,OAAAA,KAClCH,EAAQ,IACRI,EAAU,IAEd,EAE+Ba,SAAA,EAC3BV,EAAAA,EAAAA,MAACW,EAAAA,EAAS,CAAAD,SAAA,CAAC,QAETE,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,KAAK,OAAOtB,KAAK,OAAOuB,MAAOvB,EAAMwB,SAtBzB,SAAHC,GAAA,IAAgBF,EAAKE,EAAfC,OAAUH,MAAK,OAAStB,EAAQsB,EAAO,EAsBWI,UAAQ,QAElFnB,EAAAA,EAAAA,MAACW,EAAAA,EAAS,CAACS,MAAO,CAACC,SAAUtC,EAAMuC,MAAMC,MAAMC,OAAQC,aAAc,QAAQf,SAAA,CAAC,UAE5EE,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,KAAK,MAAMtB,KAAK,SAASuB,MAAOnB,EAAQoB,SAzB1B,SAAHU,GAAA,IAAgBX,EAAKW,EAAfR,OAAUH,MAAK,OAASlB,EAAUkB,EAAO,EAyBYI,UAAQ,QAEvFP,EAAAA,EAAAA,KAACe,EAAAA,EAAM,CAACb,KAAK,SAAQJ,SAAC,kBAG5B,E,mBCtBA,EAhBe,WACb,IAAM3B,GAAQC,EAAAA,EAAAA,KACRF,GAASG,EAAAA,EAAAA,IAAYJ,GACrBK,GAAWC,EAAAA,EAAAA,MAKjB,OACEa,EAAAA,EAAAA,MAAC4B,EAAAA,GAAG,CAACR,MAAO,CAACC,SAAUtC,EAAMuC,MAAMC,MAAMC,OAAQC,aAAc,QAAQf,SAAA,CAAC,2BAEpEE,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,KAAK,OAAOC,MAAOjC,EAAQkC,SANvB,SAAHC,GAA+B,IAAfF,EAAKE,EAAfC,OAAUH,MAC5B7B,GAAS2C,EAAAA,EAAAA,GAAUd,GACpB,MAOH,E,qKCJA,GAA4Ce,EAAAA,EAAAA,GAE1C,CACAtC,KAAM,oBACNuC,aAAc,oGACfC,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GALMC,EAAAA,EAAAA,GAAoBC,EAAa,KAqC3BC,GAAOC,EAAAA,EAAAA,IAA4B,SAAcC,EAAOC,GACnE,IAAMC,GAASC,EAAAA,EAAAA,IAAoB,OAAQH,GAC3C,GAMII,EAAAA,EAAAA,IAAiBJ,GALnB3B,EAAAA,EAAAA,SAAAgC,EAAAA,EACAC,UAAAA,OAAAA,IAAY,WACZC,EAAAA,EAAAA,cACAC,EAAAA,EAAAA,QACGC,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAGCC,EC7DR,SAA0BrC,GACxB,OAAOsC,EAAAA,SAAAA,QAAiBtC,GAAU5B,QAChC,SAACmE,GAAK,OAAKC,EAAAA,EAAAA,gBAAeD,EAAM,GAEpC,CDyDwBE,CAAiBzC,GAIjC0C,EAAeP,GAAUA,EAAAA,EAAAA,GAAAA,CAAAA,EAFd,kCAE4B,CAAEQ,GAAIR,IAAc,CAAC,EAElE,OACE,SAACZ,EAAAA,CAAmBlB,MAAOwB,EACzB7B,UAAAA,EAAAA,EAAAA,KAAC4C,EAAAA,EAAAA,IAASC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,CACRjB,IAAAA,EACAkB,cAAeb,EACfc,kBAAmBb,EAKnBc,KAAK,OACLC,OAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,CAAAA,EAAYpB,EAAOqB,WAAcR,IAC7BN,GAAAA,CAAAA,EAAAA,CAEHpC,SAAAA,MAIT,IAEAyB,EAAK0B,YAAc,QAEQzB,EAAAA,EAAAA,IAA4B,SAACC,EAAOC,GACrCD,EAAhByB,GAAR,IAAehB,GAAAA,EAAAA,EAAAA,GAAST,EAAAA,GACxB,OACE,SAACF,GAAAA,EAAAA,EAAAA,GAAAA,CAAKG,IAAAA,EAAUwB,GAAG,KAAKnB,UAAU,UAAUoB,YAAY,OAAUjB,GAEtE,IAEYe,YAAc,eAEGzB,EAAAA,EAAAA,IAA4B,SACvDC,EACAC,GAEwBD,EAAhByB,GAAR,IAAehB,GAAAA,EAAAA,EAAAA,GAAST,EAAAA,GACxB,OACE,SAACF,GAAAA,EAAAA,EAAAA,GAAAA,CAAKG,IAAAA,EAAUwB,GAAG,KAAKnB,UAAU,UAAUoB,YAAY,OAAUjB,GAEtE,IAEce,YAAc,iBASJzB,EAAAA,EAAAA,IAAgC,SACtDC,EACAC,GAEA,IAAMC,EAASL,IAEf,OAAO,SAACoB,EAAAA,EAAAA,IAASU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,CAAC1B,IAAAA,GAAcD,GAAAA,CAAAA,EAAAA,CAAOsB,MAAOpB,EAAO0B,OACvD,IAESJ,YAAc,YAOCzB,EAAAA,EAAAA,IAA6B,SACnDC,EACAC,GAEA,IAAMC,EAASL,IAEf,OAAO,SAACgC,EAAAA,GAAIA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,CAAC5B,IAAAA,EAAUoB,KAAK,gBAAmBrB,GAAAA,CAAAA,EAAAA,CAAOsB,MAAOpB,EAAO4B,OACtE,IAESN,YAAc,WE1IvB,IA8BA,EA9BqB,WACnB,IAAM9E,GAAQC,EAAAA,EAAAA,KACRL,GAAWM,EAAAA,EAAAA,IAAYR,GACvBK,GAASG,EAAAA,EAAAA,IAAYJ,GACrBK,GAAWC,EAAAA,EAAAA,MAYXiF,EALKzF,EAASG,QAAO,SAAAuF,GAAO,OAC5BA,EAAQ7E,KAAK8E,cAAcC,SAASzF,EAAOwF,cAAc,IAM/D,OACE1D,EAAAA,EAAAA,KAACuB,EAAI,CAAAzB,SACE0D,EAAiBI,KAAI,SAAAvD,GAAA,IAAGwD,EAAExD,EAAFwD,GAAIjF,EAAIyB,EAAJzB,KAAMI,EAAMqB,EAANrB,OAAM,OACrCI,EAAAA,EAAAA,MAAA,MAAaoB,MAAO,CAACC,SAAUtC,EAAMuC,MAAMC,MAAMC,OAAQC,aAAc,OAAOf,SAAA,CACzElB,EAAK,KAAGI,GACTgB,EAAAA,EAAAA,KAACe,EAAAA,EAAM,CAAC+C,QAAS,kBAjBX,SAAAD,GAClBvF,GAASyF,EAAAA,EAAAA,IAAkBF,GAC/B,CAeuCG,CAAcH,EAAG,EAAC/D,SAAC,aAFrC+D,EAGJ,KAInB,ECFA,EA3BqB,WACnB,IAAM1F,GAAQC,EAAAA,EAAAA,KACd,OACEgB,EAAAA,EAAAA,MAAC4B,EAAAA,GAAG,CAACR,MAAO,CAACyD,QAAS,OAAQC,cAAe,UAAUpE,SAAA,EACrDE,EAAAA,EAAAA,KAAA,MACEQ,MAAO,CACL2D,MAAOhG,EAAMiG,OAAOC,QACpB5D,SAAUtC,EAAMuC,MAAMC,MAAM2D,MAC5BzD,aAAc,QACdf,SAAC,eAGLE,EAAAA,EAAAA,KAACuE,EAAI,KACLvE,EAAAA,EAAAA,KAAA,MACEQ,MAAO,CACL2D,MAAOhG,EAAMiG,OAAOC,QACpB5D,SAAUtC,EAAMuC,MAAMC,MAAM2D,MAC5BzD,aAAc,QACdf,SAAC,cAGLE,EAAAA,EAAAA,KAACwE,EAAM,KACPxE,EAAAA,EAAAA,KAACyE,EAAY,MAGnB,C","sources":["store/selectors.js","components/Form/Form.jsx","components/Filter/Filter.jsx","../node_modules/@chakra-ui/layout/src/list.tsx","../node_modules/@chakra-ui/react-children-utils/dist/index.mjs","components/List/List.jsx","pages/ContactsPage.jsx"],"sourcesContent":["export const contactsSelector = (state) => state.contacts.items;\nexport const filterSelector = (state) => state.filter.filter;\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactsThunk, getContactsThunk } from '../../store/thunks';\nimport { contactsSelector } from '../../store/selectors';\nimport { FormLabel, Button, Input, useTheme } from '@chakra-ui/react';\n\nconst Form = () => {\n  const theme = useTheme()\n  const contacts = useSelector(contactsSelector);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChangeName = ({ target: { value } }) => setName(value);\n  const handleChangeNumber = ({ target: { value } }) => setNumber(value); \n\n  useEffect(() => {\n    dispatch(getContactsThunk())\n  }, [dispatch])\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (contacts.some(el => el.name.toLocaleLowerCase() === name.toLocaleLowerCase())) {\n      alert(`${name} is alredy in contacts`);\n    } else {\n      dispatch(addContactsThunk({ name, number }));\n      setName('');\n      setNumber('');\n    }\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormLabel>\n        Name\n        <Input type=\"text\" name=\"name\" value={name} onChange={handleChangeName} required />\n      </FormLabel>\n      <FormLabel style={{fontSize: theme.fonts.sizes.medium, marginBottom: '12px'}}>\n        Number\n        <Input type=\"tel\" name=\"number\" value={number} onChange={handleChangeNumber} required />\n      </FormLabel>\n      <Button type=\"submit\">Add contact</Button>\n    </form>\n  )\n}\n\nexport default Form","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addFilter } from '../../store/sliceFilter';\nimport { filterSelector } from '../../store/selectors';\nimport { Box, Input, useTheme } from '@chakra-ui/react';\n\nconst Filter = () => {\n  const theme = useTheme()\n  const filter = useSelector(filterSelector);\n  const dispatch = useDispatch();\n\n  const filtered = ({ target: { value } }) => {\n    dispatch(addFilter(value));\n   }\n  return (\n    <Box style={{fontSize: theme.fonts.sizes.medium, marginBottom: '12px'}}>\n        Filter contacts by name\n        <Input type=\"text\" value={filter} onChange={filtered} />\n    </Box>\n  )\n}\n\nexport default Filter\n","import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport type {\n  HTMLChakraProps,\n  SystemProps,\n  ThemingProps,\n} from \"@chakra-ui/system\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\n\nconst [ListStylesProvider, useListStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `,\n})\n\nexport { useListStyles }\n\ninterface ListOptions {\n  /**\n   * Shorthand prop for `listStyleType`\n   * @type SystemProps[\"listStyleType\"]\n   */\n  styleType?: SystemProps[\"listStyleType\"]\n  /**\n   * Shorthand prop for `listStylePosition`\n   * @type SystemProps[\"listStylePosition\"]\n   */\n  stylePosition?: SystemProps[\"listStylePosition\"]\n  /**\n   * The space between each list item\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n}\n\nexport interface ListProps\n  extends HTMLChakraProps<\"ul\">,\n    ThemingProps<\"List\">,\n    ListOptions {}\n\n/**\n * List is used to display list items, it renders a `<ul>` by default.\n *\n * @see Docs https://chakra-ui.com/list\n */\nexport const List = forwardRef<ListProps, \"ul\">(function List(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props)\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props)\n\n  const validChildren = getValidChildren(children)\n\n  const selector = \"& > *:not(style) ~ *:not(style)\"\n\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {}\n\n  return (\n    <ListStylesProvider value={styles}>\n      <chakra.ul\n        ref={ref}\n        listStyleType={styleType}\n        listStylePosition={stylePosition}\n        /**\n         * We added this role to fix the Safari accessibility issue with list-style-type: none\n         * @see https://www.scottohara.me/blog/2019/01/12/lists-and-safari.html\n         */\n        role=\"list\"\n        __css={{ ...styles.container, ...spacingStyle }}\n        {...rest}\n      >\n        {validChildren}\n      </chakra.ul>\n    </ListStylesProvider>\n  )\n})\n\nList.displayName = \"List\"\n\nexport const OrderedList = forwardRef<ListProps, \"ol\">((props, ref) => {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ol\" styleType=\"decimal\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nOrderedList.displayName = \"OrderedList\"\n\nexport const UnorderedList = forwardRef<ListProps, \"ul\">(function UnorderedList(\n  props,\n  ref,\n) {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ul\" styleType=\"initial\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nUnorderedList.displayName = \"UnorderedList\"\n\nexport interface ListItemProps extends HTMLChakraProps<\"li\"> {}\n\n/**\n * ListItem\n *\n * Used to render a list item\n */\nexport const ListItem = forwardRef<ListItemProps, \"li\">(function ListItem(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <chakra.li ref={ref} {...props} __css={styles.item} />\n})\n\nListItem.displayName = \"ListItem\"\n\n/**\n * ListIcon\n *\n * Used to render an icon beside the list item text\n */\nexport const ListIcon = forwardRef<IconProps, \"svg\">(function ListIcon(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <Icon ref={ref} role=\"presentation\" {...props} __css={styles.icon} />\n})\n\nListIcon.displayName = \"ListIcon\"\n","// src/index.ts\nimport { Children, isValidElement } from \"react\";\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(\n    (child) => isValidElement(child)\n  );\n}\nexport {\n  getValidChildren\n};\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { dellContactsThunk } from '../../store/thunks';\nimport { contactsSelector, filterSelector } from '../../store/selectors';\nimport { List, Button, useTheme } from '@chakra-ui/react';\n\nconst ContactsList = () => {\n  const theme = useTheme()\n  const contacts = useSelector(contactsSelector);\n  const filter = useSelector(filterSelector);\n  const dispatch = useDispatch();\n\n  const removeContact = id => {\n      dispatch(dellContactsThunk(id));\n  }\n\n  const filterContact = () => {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n  };\n\n  const filteredContacts = filterContact();\n    \n  return (\n    <List>\n          {filteredContacts.map(({ id, name, number }) => (\n              <li key={id} style={{fontSize: theme.fonts.sizes.medium, marginBottom: '4px'}}>\n                  {name}: {number}\n                  <Button onClick={() => removeContact(id)}>Delete</Button>\n              </li>\n          ))}\n    </List>\n  )\n}\n\nexport default ContactsList","import Form from '../components/Form/Form';\nimport Filter from '../components/Filter/Filter';\nimport ContactsList from '../components/List/List';\nimport { Box, useTheme } from '@chakra-ui/react';\n\nconst ContactsPage = () => {\n  const theme = useTheme()\n  return (\n    <Box style={{display: 'flex', flexDirection: 'column'}}>\n      <h1\n        style={{\n          color: theme.colors.primary,\n          fontSize: theme.fonts.sizes.large,\n          marginBottom: \"12px\"\n        }}>\n        Phonebook\n      </h1>\n      <Form />\n      <h2\n        style={{\n          color: theme.colors.primary,\n          fontSize: theme.fonts.sizes.large,\n          marginBottom: \"12px\"\n        }}>\n        Contacts\n      </h2>            \n      <Filter />\n      <ContactsList />\n    </Box>\n  );\n};\n\nexport default ContactsPage;"],"names":["contactsSelector","state","contacts","items","filterSelector","filter","theme","useTheme","useSelector","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","useEffect","getContactsThunk","_jsxs","onSubmit","e","preventDefault","some","el","toLocaleLowerCase","alert","concat","addContactsThunk","children","FormLabel","_jsx","Input","type","value","onChange","_ref","target","required","style","fontSize","fonts","sizes","medium","marginBottom","_ref2","Button","Box","addFilter","createContext","errorMessage","_createContext2","ListStylesProvider","useListStyles","List","forwardRef","props","ref","styles","useMultiStyleConfig","omitThemingProps","_omitThemingProps$sty","styleType","stylePosition","spacing","rest","validChildren","Children","child","isValidElement","getValidChildren","spacingStyle","mt","chakra","ul","listStyleType","listStylePosition","role","__css","container","displayName","as","marginStart","li","item","Icon","icon","filteredContacts","contact","toLowerCase","includes","map","id","onClick","dellContactsThunk","removeContact","display","flexDirection","color","colors","primary","large","Form","Filter","ContactsList"],"sourceRoot":""}